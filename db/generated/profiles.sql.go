// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: profiles.sql

package db

import (
	"context"
	"database/sql"
)

const createProfile = `-- name: CreateProfile :exec
INSERT INTO profiles (
  user_id, name, age, birth_date, birth_time, birth_place,
  nakshatra, rashi, gender, height, father_name, mother_name,
  total_family_members, qualification, degree, college,
  designation, company_and_city, city, district, state,
  marital_status, add_details, mobile_number, profile_photo_url
) VALUES (
  $1, $2, $3, $4, $5, $6,
  $7, $8, $9, $10, $11, $12,
  $13, $14, $15, $16,
  $17, $18, $19, $20, $21,
  $22, $23, $24, $25
)
`

type CreateProfileParams struct {
	UserID             string
	Name               sql.NullString
	Age                sql.NullInt32
	BirthDate          sql.NullString
	BirthTime          sql.NullString
	BirthPlace         sql.NullString
	Nakshatra          sql.NullString
	Rashi              sql.NullString
	Gender             sql.NullString
	Height             sql.NullString
	FatherName         sql.NullString
	MotherName         sql.NullString
	TotalFamilyMembers sql.NullInt32
	Qualification      sql.NullString
	Degree             sql.NullString
	College            sql.NullString
	Designation        sql.NullString
	CompanyAndCity     sql.NullString
	City               sql.NullString
	District           sql.NullString
	State              sql.NullString
	MaritalStatus      sql.NullString
	AddDetails         sql.NullString
	MobileNumber       sql.NullString
	ProfilePhotoUrl    sql.NullString
}

func (q *Queries) CreateProfile(ctx context.Context, arg CreateProfileParams) error {
	_, err := q.db.ExecContext(ctx, createProfile,
		arg.UserID,
		arg.Name,
		arg.Age,
		arg.BirthDate,
		arg.BirthTime,
		arg.BirthPlace,
		arg.Nakshatra,
		arg.Rashi,
		arg.Gender,
		arg.Height,
		arg.FatherName,
		arg.MotherName,
		arg.TotalFamilyMembers,
		arg.Qualification,
		arg.Degree,
		arg.College,
		arg.Designation,
		arg.CompanyAndCity,
		arg.City,
		arg.District,
		arg.State,
		arg.MaritalStatus,
		arg.AddDetails,
		arg.MobileNumber,
		arg.ProfilePhotoUrl,
	)
	return err
}

const getProfile = `-- name: GetProfile :one
SELECT user_id, name, age, birth_date, birth_time, birth_place, nakshatra, rashi, gender, height, father_name, mother_name, total_family_members, qualification, degree, college, designation, company_and_city, city, district, state, marital_status, add_details, mobile_number, profile_photo_url FROM profiles WHERE user_id = $1
`

func (q *Queries) GetProfile(ctx context.Context, userID string) (Profile, error) {
	row := q.db.QueryRowContext(ctx, getProfile, userID)
	var i Profile
	err := row.Scan(
		&i.UserID,
		&i.Name,
		&i.Age,
		&i.BirthDate,
		&i.BirthTime,
		&i.BirthPlace,
		&i.Nakshatra,
		&i.Rashi,
		&i.Gender,
		&i.Height,
		&i.FatherName,
		&i.MotherName,
		&i.TotalFamilyMembers,
		&i.Qualification,
		&i.Degree,
		&i.College,
		&i.Designation,
		&i.CompanyAndCity,
		&i.City,
		&i.District,
		&i.State,
		&i.MaritalStatus,
		&i.AddDetails,
		&i.MobileNumber,
		&i.ProfilePhotoUrl,
	)
	return i, err
}

const updateProfile = `-- name: UpdateProfile :exec
UPDATE profiles
SET
  name = $2, age = $3, birth_date = $4, birth_time = $5,
  birth_place = $6, nakshatra = $7, rashi = $8, gender = $9,
  height = $10, father_name = $11, mother_name = $12,
  total_family_members = $13, qualification = $14, degree = $15,
  college = $16, designation = $17, company_and_city = $18,
  city = $19, district = $20, state = $21, marital_status = $22,
  add_details = $23, mobile_number = $24, profile_photo_url = $25
WHERE user_id = $1
`

type UpdateProfileParams struct {
	UserID             string
	Name               sql.NullString
	Age                sql.NullInt32
	BirthDate          sql.NullString
	BirthTime          sql.NullString
	BirthPlace         sql.NullString
	Nakshatra          sql.NullString
	Rashi              sql.NullString
	Gender             sql.NullString
	Height             sql.NullString
	FatherName         sql.NullString
	MotherName         sql.NullString
	TotalFamilyMembers sql.NullInt32
	Qualification      sql.NullString
	Degree             sql.NullString
	College            sql.NullString
	Designation        sql.NullString
	CompanyAndCity     sql.NullString
	City               sql.NullString
	District           sql.NullString
	State              sql.NullString
	MaritalStatus      sql.NullString
	AddDetails         sql.NullString
	MobileNumber       sql.NullString
	ProfilePhotoUrl    sql.NullString
}

func (q *Queries) UpdateProfile(ctx context.Context, arg UpdateProfileParams) error {
	_, err := q.db.ExecContext(ctx, updateProfile,
		arg.UserID,
		arg.Name,
		arg.Age,
		arg.BirthDate,
		arg.BirthTime,
		arg.BirthPlace,
		arg.Nakshatra,
		arg.Rashi,
		arg.Gender,
		arg.Height,
		arg.FatherName,
		arg.MotherName,
		arg.TotalFamilyMembers,
		arg.Qualification,
		arg.Degree,
		arg.College,
		arg.Designation,
		arg.CompanyAndCity,
		arg.City,
		arg.District,
		arg.State,
		arg.MaritalStatus,
		arg.AddDetails,
		arg.MobileNumber,
		arg.ProfilePhotoUrl,
	)
	return err
}
